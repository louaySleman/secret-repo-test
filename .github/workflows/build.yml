name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  android-build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Run Yarn Install
        run: |
          npm i -g corepack
          yarn install

      - name: Create .env file
        run: |
          echo "TEST_SDK_KEY=${{ secrets.TEST_SDK_KEY_DEV }}" >> .env
          echo "ENV=dev" >> .env

      - name: Create .env.prod file
        run: |
          echo "TEST_SDK_KEY=${{ secrets.TEST_SDK_KEY }}" >> .env.prod
          echo "ENV=prod" >> .env.prod

      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew

      # Build dev APK
      - name: Build dev application
        run: |
          cd android
          ./gradlew assembleDevRelease

      # Move dev APK to a safe location before cleaning
      - name: Move DEV APK to a safe location
        run: |
          mkdir -p /tmp/dev-apk
          mv android/app/build/outputs/apk/dev/release/app-dev-release.apk /tmp/dev-apk/

      # Clean after dev build
      - name: Clean after dev build
        run: |
          cd android
          ./gradlew clean

      # Upload the dev APK from the safe location
      - name: Upload DEV APK
        uses: actions/upload-artifact@v4
        with:
          name: app-dev-release.apk
          path: /tmp/dev-apk/app-dev-release.apk

      # Build prod APK
      - name: Build prod application
        run: |
          cd android
          ./gradlew assembleProdRelease

      # Upload the prod APK directly
      - name: Upload PROD APK
        uses: actions/upload-artifact@v4
        with:
          name: app-prod-release.apk
          path: android/app/build/outputs/apk/prod/release/app-prod-release.apk

  ios-build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods

      - name: Install Dependencies
        run: |
          yarn install
          cd ios
          pod install

      - name: Build iOS
        run: |
          xcodebuild -workspace ios/AwesomeProject.xcworkspace \
          -scheme AwesomeProject \
          -sdk iphonesimulator \
          -configuration Release \
          -destination 'platform=iOS Simulator,name=iPhone 14' \
          clean build \
          -verbose

      - name: Locate and Upload .app for Simulator
        run: |
          APP_PATH=$(find ~/Library/Developer/Xcode/DerivedData -name "*.app" | head -n 1)
          echo "App path is: $APP_PATH"
          echo "APP_PATH=$APP_PATH" >> $GITHUB_ENV

      - name: Upload .app for Simulator
        uses: actions/upload-artifact@v4
        with:
          name: app-simulator.app
          path: ${{ env.APP_PATH }}
